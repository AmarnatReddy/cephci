#========================================================================
# Test-Case: Tier 1
#
# Cluster Configuration:
#    conf/squid/smb/1admin-4node-1client-cluster.yaml
#========================================================================
tests:
  - test:
      name: setup pre-requisites
      desc: Install software pre-requisites for cluster deployment
      module: install_prereq.py
      abort-on-fail: true

  - test:
      name: Deploy cluster using cephadm
      desc: Bootstrap and deploy services
      module: test_cephadm.py
      polarion-id: CEPH-83573713
      config:
        steps:
          - config:
              command: bootstrap
              service: cephadm
              args:
                mon-ip: node1
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: apply
              service: rgw
              pos_args:
                - rgw.1
              args:
                placement:
                  label: rgw
          - config:
              args:
                - "ceph fs volume create cephfs"
              command: shell
          - config:
              args:
                placement:
                  label: mds
              base_cmd_args:
                verbose: true
              command: apply
              pos_args:
                - cephfs
              service: mds
          - config:
              args:
                - "ceph osd pool create rbd"
              command: shell
          - config:
              args:
                - "rbd pool init rbd"
              command: shell
      destroy-cluster: false
      abort-on-fail: true

  - test:
      name: configure client
      desc: Configure client system
      module: test_client.py
      config:
        command: add
        id: client.1
        node: node4
        install_packages:
          - ceph-common
          - samba-client
          - cifs-utils
      copy_admin_keyring: true
      destroy-cluster: false
      abort-on-fail: true

  - test:
      name: Deploy samba with auth_mode 'user' with login control (Read-Write)
      desc: Deploy samba with auth_mode 'user' with login control (Read-Write)
      module: smb_acl_operations.py
      polarion-id: CEPH-83626223
      config:
        file_type: yaml
        file_mount: /tmp
        cifs_mount_point: /mnt/smb
        spec:
          - resource_type: ceph.smb.cluster
            cluster_id: smb1
            auth_mode: user
            user_group_settings:
              - {source_type: resource, ref: ug1}
            placement:
              label: smb
          - resource_type: ceph.smb.usersgroups
            users_groups_id: ug1
            values:
              users:
                - {name: user1, password: passwd}
              groups: []
          - resource_type: ceph.smb.share
            cluster_id: smb1
            share_id: share1
            cephfs:
              volume: cephfs
              subvolumegroup: smb
              subvolume: sv1
              path: /
            restrict_access: true
            login_control:
              - {name: user1, category: user, access: read-write}

  - test:
      name: Deploy samba with auth_mode 'user' with login control (Read)
      desc: Deploy samba with auth_mode 'user' with login control (Read)
      module: smb_acl_operations.py
      polarion-id: CEPH-83626223
      config:
        file_type: yaml
        file_mount: /tmp
        cifs_mount_point: /mnt/smb
        spec:
          - resource_type: ceph.smb.cluster
            cluster_id: smb1
            auth_mode: user
            user_group_settings:
              - {source_type: resource, ref: ug1}
            placement:
              label: smb
          - resource_type: ceph.smb.usersgroups
            users_groups_id: ug1
            values:
              users:
                - {name: user1, password: passwd}
              groups: []
          - resource_type: ceph.smb.share
            cluster_id: smb1
            share_id: share1
            cephfs:
              volume: cephfs
              subvolumegroup: smb
              subvolume: sv1
              path: /
            restrict_access: true
            login_control:
              - {name: user1, category: user, access: read}
